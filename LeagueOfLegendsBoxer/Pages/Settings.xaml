<Page x:Class="LeagueOfLegendsBoxer.Pages.Settings"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:hc="https://handyorg.github.io/handycontrol"
      mc:Ignorable="d" 
      FontFamily="Arial"
      d:DesignHeight="450" d:DesignWidth="800"
      Title="Settings">

    <behaviors:Interaction.Triggers>
        <behaviors:EventTrigger EventName="Loaded">
            <behaviors:InvokeCommandAction Command="{Binding LoadCommandAsync}"></behaviors:InvokeCommandAction>
        </behaviors:EventTrigger>
    </behaviors:Interaction.Triggers>

    <ScrollViewer VerticalScrollBarVisibility="Visible" Margin="2" HorizontalScrollBarVisibility="Visible">
        <StackPanel Orientation="Horizontal">
            <GroupBox Margin="2 0 10 0" Header="游戏设置" 
                      Width="300"
                      Padding="5" FontSize="18" Style="{StaticResource GroupBoxOriginal}" 
                      Foreground="{DynamicResource DefaultFontColor}"
                      Background="{DynamicResource DefaultCardBackgroundColor}">
                <StackPanel Orientation="Vertical">
                    <Button Content="设置账号所在大区" 
                            FontSize="15" Height="35" HorizontalAlignment="Right" Margin="0 5 0 10" Cursor="Hand"
                            Command="{Binding ChooseServerAreaForCurrentAccountCommand}"></Button>
                    <StackPanel Orientation="Horizontal">
                        <CheckBox Content="自动接受对局" FontSize="18" Foreground="{DynamicResource DefaultFontColor}" IsChecked="{Binding AutoAcceptGame,UpdateSourceTrigger=PropertyChanged}">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="Checked">
                                    <behaviors:InvokeCommandAction Command="{Binding CheckedAutoAcceptCommandAsync}"></behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                                <behaviors:EventTrigger EventName="Unchecked">
                                    <behaviors:InvokeCommandAction Command="{Binding UncheckedAutoAcceptCommandAsync}"></behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </CheckBox>
                        <!--<hc:NumericUpDown Maximum="8" 
                                          Margin="20 0 0 0"
                                          Width="140"
                                          Minimum="0"
                                          ToolTip="最大8s"
                                          Foreground="{DynamicResource DefaultFontColor}"
                                          Value="{Binding AutoAcceptGameDelay,UpdateSourceTrigger=PropertyChanged}"
                                          Style="{StaticResource NumericUpDownExtend}" 
                                          hc:TitleElement.Title="延迟(s)" hc:TitleElement.TitlePlacement="Left">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="ValueChanged">
                                    <behaviors:InvokeCommandAction Command="{Binding AutoAcceptGameDelayChangedCommandAsync}"></behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </hc:NumericUpDown>-->
                    </StackPanel>
                    
                    <!--<StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                        <CheckBox Content="游戏结束自动到结算页面" 
                                  FontSize="18" 
                                  Foreground="{DynamicResource DefaultFontColor}" 
                                  IsChecked="{Binding AutoEndGame,UpdateSourceTrigger=PropertyChanged}">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="Checked">
                                    <behaviors:InvokeCommandAction Command="{Binding CheckedAutoEndGameCommandAsync}"></behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                                <behaviors:EventTrigger EventName="Unchecked">
                                    <behaviors:InvokeCommandAction Command="{Binding UncheckedAutoEndGameCommandAsync}"></behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </CheckBox>
                    </StackPanel>-->
                    
                    <StackPanel Orientation="Horizontal">
                        <CheckBox Content="匹配秒选英雄" Foreground="{DynamicResource DefaultFontColor}" Margin="0 10 0 0" FontSize="18" IsChecked="{Binding AutoLockHero,UpdateSourceTrigger=PropertyChanged}">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="Checked">
                                    <behaviors:InvokeCommandAction Command="{Binding CheckedAutoLockHeroCommandAsync}"></behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                                <behaviors:EventTrigger EventName="Unchecked">
                                    <behaviors:InvokeCommandAction Command="{Binding UncheckedAutoLockHeroCommandAsync}"></behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </CheckBox>

                        <ComboBox hc:TitleElement.Title="匹配秒选英雄" 
                                  IsEnabled="{Binding AutoLockHero,UpdateSourceTrigger=PropertyChanged}"
                                  IsEditable="True"
                                  Width="150"
                                  IsReadOnly="False"
                                  IsTextSearchEnabled="False"
                                  IsDropDownOpen="{Binding LockHerosOpen,UpdateSourceTrigger=PropertyChanged}"
                                  FontSize="16"
                                  Margin="10 10 0 0"
                                  DisplayMemberPath="Label"
                                  PreviewKeyUp="ComboBox_PreviewKeyUp"
                                  Foreground="Black"
                                  ItemsSource="{Binding LockHeros,UpdateSourceTrigger=PropertyChanged}"
                                  SelectedItem="{Binding LockHero,UpdateSourceTrigger=PropertyChanged}"
                                  Text="{Binding SearchLockText,UpdateSourceTrigger=PropertyChanged}"
                              >
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="KeyUp">
                                    <behaviors:InvokeCommandAction Command="{Binding SearchLockHeroCommand}"></behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </ComboBox>
                    </StackPanel>

                    <StackPanel Orientation="Vertical">
                        <CheckBox Content="排位秒选英雄" Foreground="{DynamicResource DefaultFontColor}" Margin="0 10 0 0" FontSize="18" IsChecked="{Binding RankAutoLockHero,UpdateSourceTrigger=PropertyChanged}">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="Checked">
                                    <behaviors:InvokeCommandAction Command="{Binding CheckedRankAutoLockHeroCommandAsync}"></behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                                <behaviors:EventTrigger EventName="Unchecked">
                                    <behaviors:InvokeCommandAction Command="{Binding UncheckedRankAutoLockHeroCommandAsync}"></behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </CheckBox>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <TextBlock Text="上路:" Margin="0 15 20 0" VerticalAlignment="Top"></TextBlock>
                            <StackPanel Orientation="Vertical">
                                <ComboBox hc:TitleElement.Title="英雄1" 
                                      IsEnabled="{Binding RankAutoLockHero,UpdateSourceTrigger=PropertyChanged}"
                                      IsEditable="True"
                                      Width="200"
                                      IsReadOnly="False"
                                      IsTextSearchEnabled="False"
                                      IsDropDownOpen="{Binding TopLockHerosOpen1,UpdateSourceTrigger=PropertyChanged}"
                                      FontSize="16"
                                      Margin="10 10 0 0"
                                      DisplayMemberPath="Label"
                                      PreviewKeyUp="ComboBox_PreviewKeyUp"
                                      Foreground="Black"
                                      ItemsSource="{Binding TopLockHeros1,UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding TopLockHero1,UpdateSourceTrigger=PropertyChanged}"
                                      Text="{Binding TopSearchLockText1,UpdateSourceTrigger=PropertyChanged}"
                                  >
                                    <behaviors:Interaction.Triggers>
                                        <behaviors:EventTrigger EventName="KeyUp">
                                            <behaviors:InvokeCommandAction Command="{Binding TopSearchLockHeroCommand1}"></behaviors:InvokeCommandAction>
                                        </behaviors:EventTrigger>
                                    </behaviors:Interaction.Triggers>
                                </ComboBox>
                                <ComboBox hc:TitleElement.Title="英雄1" 
                                      IsEnabled="{Binding RankAutoLockHero,UpdateSourceTrigger=PropertyChanged}"
                                      IsEditable="True"
                                      Width="200"
                                      IsReadOnly="False"
                                      IsTextSearchEnabled="False"
                                      IsDropDownOpen="{Binding TopLockHerosOpen2,UpdateSourceTrigger=PropertyChanged}"
                                      FontSize="16"
                                      Margin="10 10 0 0"
                                      DisplayMemberPath="Label"
                                      PreviewKeyUp="ComboBox_PreviewKeyUp"
                                      Foreground="Black"
                                      ItemsSource="{Binding TopLockHeros2,UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding TopLockHero2,UpdateSourceTrigger=PropertyChanged}"
                                      Text="{Binding TopSearchLockText2,UpdateSourceTrigger=PropertyChanged}"
                                  >
                                    <behaviors:Interaction.Triggers>
                                        <behaviors:EventTrigger EventName="KeyUp">
                                            <behaviors:InvokeCommandAction Command="{Binding TopSearchLockHeroCommand2}"></behaviors:InvokeCommandAction>
                                        </behaviors:EventTrigger>
                                    </behaviors:Interaction.Triggers>
                                </ComboBox>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <TextBlock Text="打野:" Margin="0 15 20 0" VerticalAlignment="Top"></TextBlock>
                            <StackPanel Orientation="Vertical">
                                <ComboBox hc:TitleElement.Title="英雄1" 
                                      IsEnabled="{Binding RankAutoLockHero,UpdateSourceTrigger=PropertyChanged}"
                                      IsEditable="True"
                                      Width="200"
                                      IsReadOnly="False"
                                      IsTextSearchEnabled="False"
                                      IsDropDownOpen="{Binding JungleLockHerosOpen1,UpdateSourceTrigger=PropertyChanged}"
                                      FontSize="16"
                                      Margin="10 10 0 0"
                                      DisplayMemberPath="Label"
                                      PreviewKeyUp="ComboBox_PreviewKeyUp"
                                      Foreground="Black"
                                      ItemsSource="{Binding JungleLockHeros1,UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding JungleLockHero1,UpdateSourceTrigger=PropertyChanged}"
                                      Text="{Binding JungleSearchLockText1,UpdateSourceTrigger=PropertyChanged}"
                                  >
                                    <behaviors:Interaction.Triggers>
                                        <behaviors:EventTrigger EventName="KeyUp">
                                            <behaviors:InvokeCommandAction Command="{Binding JungleSearchLockHeroCommand1}"></behaviors:InvokeCommandAction>
                                        </behaviors:EventTrigger>
                                    </behaviors:Interaction.Triggers>
                                </ComboBox>
                                <ComboBox hc:TitleElement.Title="英雄1" 
                                      IsEnabled="{Binding RankAutoLockHero,UpdateSourceTrigger=PropertyChanged}"
                                      IsEditable="True"
                                      Width="200"
                                      IsReadOnly="False"
                                      IsTextSearchEnabled="False"
                                      IsDropDownOpen="{Binding JungleLockHerosOpen2,UpdateSourceTrigger=PropertyChanged}"
                                      FontSize="16"
                                      Margin="10 10 0 0"
                                      DisplayMemberPath="Label"
                                      PreviewKeyUp="ComboBox_PreviewKeyUp"
                                      Foreground="Black"
                                      ItemsSource="{Binding JungleLockHeros2,UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding JungleLockHero2,UpdateSourceTrigger=PropertyChanged}"
                                      Text="{Binding JungleSearchLockText2,UpdateSourceTrigger=PropertyChanged}"
                                  >
                                    <behaviors:Interaction.Triggers>
                                        <behaviors:EventTrigger EventName="KeyUp">
                                            <behaviors:InvokeCommandAction Command="{Binding JungleSearchLockHeroCommand2}"></behaviors:InvokeCommandAction>
                                        </behaviors:EventTrigger>
                                    </behaviors:Interaction.Triggers>
                                </ComboBox>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <TextBlock Text="中路:" Margin="0 15 20 0" VerticalAlignment="Top"></TextBlock>
                            <StackPanel Orientation="Vertical">
                                <ComboBox hc:TitleElement.Title="英雄1" 
                                      IsEnabled="{Binding RankAutoLockHero,UpdateSourceTrigger=PropertyChanged}"
                                      IsEditable="True"
                                      Width="200"
                                      IsReadOnly="False"
                                      IsTextSearchEnabled="False"
                                      IsDropDownOpen="{Binding MiddleLockHerosOpen1,UpdateSourceTrigger=PropertyChanged}"
                                      FontSize="16"
                                      Margin="10 10 0 0"
                                      DisplayMemberPath="Label"
                                      PreviewKeyUp="ComboBox_PreviewKeyUp"
                                      Foreground="Black"
                                      ItemsSource="{Binding MiddleLockHeros1,UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding  MiddleLockHero1,UpdateSourceTrigger=PropertyChanged}"
                                      Text="{Binding MiddleSearchLockText1,UpdateSourceTrigger=PropertyChanged}"
                                  >
                                    <behaviors:Interaction.Triggers>
                                        <behaviors:EventTrigger EventName="KeyUp">
                                            <behaviors:InvokeCommandAction Command="{Binding MiddleSearchLockHeroCommand1}"></behaviors:InvokeCommandAction>
                                        </behaviors:EventTrigger>
                                    </behaviors:Interaction.Triggers>
                                </ComboBox>
                                <ComboBox hc:TitleElement.Title="英雄1" 
                                      IsEnabled="{Binding RankAutoLockHero,UpdateSourceTrigger=PropertyChanged}"
                                      IsEditable="True"
                                      Width="200"
                                      IsReadOnly="False"
                                      IsTextSearchEnabled="False"
                                      IsDropDownOpen="{Binding MiddleLockHerosOpen2,UpdateSourceTrigger=PropertyChanged}"
                                      FontSize="16"
                                      Margin="10 10 0 0"
                                      DisplayMemberPath="Label"
                                      PreviewKeyUp="ComboBox_PreviewKeyUp"
                                      Foreground="Black"
                                      ItemsSource="{Binding MiddleLockHeros2,UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding MiddleLockHero2,UpdateSourceTrigger=PropertyChanged}"
                                      Text="{Binding MiddleSearchLockText2,UpdateSourceTrigger=PropertyChanged}"
                                  >
                                    <behaviors:Interaction.Triggers>
                                        <behaviors:EventTrigger EventName="KeyUp">
                                            <behaviors:InvokeCommandAction Command="{Binding MiddleSearchLockHeroCommand2}"></behaviors:InvokeCommandAction>
                                        </behaviors:EventTrigger>
                                    </behaviors:Interaction.Triggers>
                                </ComboBox>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <TextBlock Text="下路:" Margin="0 15 20 0" VerticalAlignment="Top"></TextBlock>
                            <StackPanel Orientation="Vertical">
                                <ComboBox hc:TitleElement.Title="英雄1" 
                                      IsEnabled="{Binding RankAutoLockHero,UpdateSourceTrigger=PropertyChanged}"
                                      IsEditable="True"
                                      Width="200"
                                      IsReadOnly="False"
                                      IsTextSearchEnabled="False"
                                      IsDropDownOpen="{Binding BottomLockHerosOpen1,UpdateSourceTrigger=PropertyChanged}"
                                      FontSize="16"
                                      Margin="10 10 0 0"
                                      DisplayMemberPath="Label"
                                      PreviewKeyUp="ComboBox_PreviewKeyUp"
                                      Foreground="Black"
                                      ItemsSource="{Binding BottomLockHeros1,UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding BottomLockHero1,UpdateSourceTrigger=PropertyChanged}"
                                      Text="{Binding BottomSearchLockText1,UpdateSourceTrigger=PropertyChanged}"
                                  >
                                    <behaviors:Interaction.Triggers>
                                        <behaviors:EventTrigger EventName="KeyUp">
                                            <behaviors:InvokeCommandAction Command="{Binding BottomSearchLockHeroCommand1}"></behaviors:InvokeCommandAction>
                                        </behaviors:EventTrigger>
                                    </behaviors:Interaction.Triggers>
                                </ComboBox>
                                <ComboBox hc:TitleElement.Title="英雄1" 
                                      IsEnabled="{Binding RankAutoLockHero,UpdateSourceTrigger=PropertyChanged}"
                                      IsEditable="True"
                                      Width="200"
                                      IsReadOnly="False"
                                      IsTextSearchEnabled="False"
                                      IsDropDownOpen="{Binding BottomLockHerosOpen2,UpdateSourceTrigger=PropertyChanged}"
                                      FontSize="16"
                                      Margin="10 10 0 0"
                                      DisplayMemberPath="Label"
                                      PreviewKeyUp="ComboBox_PreviewKeyUp"
                                      Foreground="Black"
                                      ItemsSource="{Binding BottomLockHeros2,UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding BottomLockHero2,UpdateSourceTrigger=PropertyChanged}"
                                      Text="{Binding BottomSearchLockText2,UpdateSourceTrigger=PropertyChanged}"
                                  >
                                    <behaviors:Interaction.Triggers>
                                        <behaviors:EventTrigger EventName="KeyUp">
                                            <behaviors:InvokeCommandAction Command="{Binding BottomSearchLockHeroCommand2}"></behaviors:InvokeCommandAction>
                                        </behaviors:EventTrigger>
                                    </behaviors:Interaction.Triggers>
                                </ComboBox>
                            </StackPanel>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <TextBlock Text="辅助:" Margin="0 15 20 0" VerticalAlignment="Top"></TextBlock>
                            <StackPanel Orientation="Vertical">
                                <ComboBox hc:TitleElement.Title="英雄1" 
                                          IsEnabled="{Binding RankAutoLockHero,UpdateSourceTrigger=PropertyChanged}"
                                          IsEditable="True"
                                          Width="200"
                                          IsReadOnly="False"
                                          IsTextSearchEnabled="False"
                                          IsDropDownOpen="{Binding UtilityLockHerosOpen1,UpdateSourceTrigger=PropertyChanged}"
                                          FontSize="16"
                                          Margin="10 10 0 0"
                                          DisplayMemberPath="Label"
                                          PreviewKeyUp="ComboBox_PreviewKeyUp"
                                          Foreground="Black"
                                          ItemsSource="{Binding UtilityLockHeros1,UpdateSourceTrigger=PropertyChanged}"
                                          SelectedItem="{Binding UtilityLockHero1,UpdateSourceTrigger=PropertyChanged}"
                                          Text="{Binding UtilitySearchLockText1,UpdateSourceTrigger=PropertyChanged}"
                                  >
                                    <behaviors:Interaction.Triggers>
                                        <behaviors:EventTrigger EventName="KeyUp">
                                            <behaviors:InvokeCommandAction Command="{Binding UtilitySearchLockHeroCommand1}"></behaviors:InvokeCommandAction>
                                        </behaviors:EventTrigger>
                                    </behaviors:Interaction.Triggers>
                                </ComboBox>
                                <ComboBox hc:TitleElement.Title="英雄1" 
                                          IsEnabled="{Binding RankAutoLockHero,UpdateSourceTrigger=PropertyChanged}"
                                          IsEditable="True"
                                          Width="200"
                                          IsReadOnly="False"
                                          IsTextSearchEnabled="False"
                                          IsDropDownOpen="{Binding UtilityLockHerosOpen2,UpdateSourceTrigger=PropertyChanged}"
                                          FontSize="16"
                                          Margin="10 10 0 0"
                                          DisplayMemberPath="Label"
                                          PreviewKeyUp="ComboBox_PreviewKeyUp"
                                          Foreground="Black"
                                          ItemsSource="{Binding UtilityLockHeros2,UpdateSourceTrigger=PropertyChanged}"
                                          SelectedItem="{Binding UtilityLockHero2,UpdateSourceTrigger=PropertyChanged}"
                                          Text="{Binding UtilitySearchLockText2,UpdateSourceTrigger=PropertyChanged}"
                                  >
                                    <behaviors:Interaction.Triggers>
                                        <behaviors:EventTrigger EventName="KeyUp">
                                            <behaviors:InvokeCommandAction Command="{Binding UtilitySearchLockHeroCommand2}"></behaviors:InvokeCommandAction>
                                        </behaviors:EventTrigger>
                                    </behaviors:Interaction.Triggers>
                                </ComboBox>
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                    
                    <StackPanel Orientation="Horizontal">
                        <CheckBox Content="排位秒禁英雄" VerticalAlignment="Top" Foreground="{DynamicResource DefaultFontColor}" 
                                  Margin="0 15 0 0" FontSize="18" IsChecked="{Binding AutoDisableHero,UpdateSourceTrigger=PropertyChanged}">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="Checked">
                                    <behaviors:InvokeCommandAction Command="{Binding CheckedAutoDisableHeroCommandAsync}"></behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                                <behaviors:EventTrigger EventName="Unchecked">
                                    <behaviors:InvokeCommandAction Command="{Binding UncheckedAutoDisableHeroCommandAsync}"></behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </CheckBox>

                        <StackPanel Orientation="Vertical" HorizontalAlignment="Left">
                            <ComboBox hc:TitleElement.Title="排位秒禁英雄1" 
                                      Width="140"
                                      FontSize="16"
                                      IsReadOnly="False"
                                      HorizontalAlignment="Left"
                                      IsTextSearchEnabled="False"
                                      IsDropDownOpen="{Binding DisableHerosOpen,UpdateSourceTrigger=PropertyChanged}"
                                      Margin="20 10 0 0"
                                      IsEnabled="{Binding AutoDisableHero,UpdateSourceTrigger=PropertyChanged}"
                                      IsEditable="True"
                                      DisplayMemberPath="Label"
                                      Foreground="Black"
                                      PreviewKeyUp="ComboBox_PreviewKeyUp"
                                      ItemsSource="{Binding DisableHeros,UpdateSourceTrigger=PropertyChanged}"
                                      SelectedItem="{Binding DisableHero,UpdateSourceTrigger=PropertyChanged}"
                                      Text="{Binding SearchDisableText,UpdateSourceTrigger=PropertyChanged}"
                              >
                                <behaviors:Interaction.Triggers>
                                    <behaviors:EventTrigger EventName="KeyUp">
                                        <behaviors:InvokeCommandAction Command="{Binding SearchDisableHeroCommand}"></behaviors:InvokeCommandAction>
                                    </behaviors:EventTrigger>
                                </behaviors:Interaction.Triggers>
                            </ComboBox>
                        </StackPanel>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <CheckBox Content="大乱斗秒抢英雄" Margin="0 10 0 0" Foreground="{DynamicResource DefaultFontColor}" FontSize="18" IsChecked="{Binding AutoLockHeroInAram,UpdateSourceTrigger=PropertyChanged}">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="Checked">
                                    <behaviors:InvokeCommandAction Command="{Binding CheckedAutoLockHeroInAramCommandAsync}"></behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                                <behaviors:EventTrigger EventName="Unchecked">
                                    <behaviors:InvokeCommandAction Command="{Binding UncheckedAutoLockHeroInAramCommandAsync}"></behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </CheckBox>
                        <Button Content="配置大乱斗英雄" Width="130" Height="35"
                                IsEnabled="{Binding AutoLockHeroInAram,UpdateSourceTrigger=PropertyChanged}"
                                Command="{Binding OpenAramChooseCommand}"
                                FontSize="15" VerticalAlignment="Center" Margin="10 10 0 0"></Button>
                    </StackPanel>
                    <Button Content="黑名单" Width="140" Height="35"
                            HorizontalAlignment="Right"
                            Command="{Binding OpenBlackRecordCommand}"
                            FontSize="15" VerticalAlignment="Center" 
                            Margin="10 10 2 0"></Button>
                    <StackPanel Orientation="Horizontal" Margin="0 20 0 10">
                        <TextBox Style="{StaticResource TextBoxExtend}" hc:InfoElement.Placeholder="输入段位信息" Width="183" Text="{Binding RankSetting}" FontSize="14"></TextBox>
                        <Button Content="修改段位" Cursor="Hand" FontSize="15" Height="35" Command="{Binding ModifyRankLevelCommandAsync}" Margin="5 0 0 0" Width="100"/>
                    </StackPanel>
                    <TextBox Text="rank模式
                             
                                单排/双排 = RANKED_SOLO_5x5
                                灵活组排5v5 = RANKED_FLEX_SR
                                灵活组排3v3 = RANKED_FLEX_TT
                                云顶之弈 = RANKED_TFT
                              
                                段位 :
                             
                             
                                坚韧黑铁=IRON
                             
                                英勇黄铜=BRONZE
                             
                                不屈白银=SILVER
                             
                                荣耀黄金=GOLD
                             
                                华贵铂金=PLATINUM
                             
                                璀璨钻石=DIAMOND
                             
                                超凡大师=MASTER
                             
                                傲世宗师=GRANDMASTER
                             
                                最强王者=CHALLENGER
                             
                                没有段位=UNRANKED
                             
                                段位级别 : IV, III, II, I
                             
                                
                                如设置单双排钻石四:
                                RANKED_SOLO_5x5,DIAMOND,IV"
                             TextWrapping="Wrap" AcceptsReturn="True" IsReadOnly="True" FontSize="16"/>

                    <TextBlock Text="设置生涯背景" Margin="0 10 0 5" FontSize="15"></TextBlock>
                    <StackPanel Orientation="Horizontal">
                        <ComboBox hc:TitleElement.Title="选择" 
                                  IsEditable="True"
                                  Width="150"
                                  IsReadOnly="False"
                                  IsTextSearchEnabled="False"
                                  IsDropDownOpen="{Binding ChooseHeroForSkinsOpen,UpdateSourceTrigger=PropertyChanged}"
                                  FontSize="16"
                                  Margin="0 2 0 0"
                                  DisplayMemberPath="Label"
                                  PreviewKeyUp="ComboBox_PreviewKeyUp"
                                  Foreground="Black"
                                  ItemsSource="{Binding ChooseHeroForSkins,UpdateSourceTrigger=PropertyChanged}"
                                  SelectedItem="{Binding ChooseHeroForSkin,UpdateSourceTrigger=PropertyChanged}"
                                  Text="{Binding SearchChooseHeroForSkinText,UpdateSourceTrigger=PropertyChanged}"
                              >
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="KeyUp">
                                    <behaviors:InvokeCommandAction Command="{Binding SearchHeroForSkinCommand}"></behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </ComboBox>
                        <Button Content="查询皮肤"
                                Command="{Binding SearchSkinsForHeroCommandAsync}" FontSize="15"
                                Width="135" Margin="5 2 0 0" Height="35" Cursor="Hand"></Button>
                    </StackPanel>
                    <TextBlock Text="设置个人签名" Margin="0 10 0 5" FontSize="15"></TextBlock>
                    <StackPanel Orientation="Vertical">
                        <TextBox Text="{Binding Signature,UpdateSourceTrigger=PropertyChanged}"
                                 AcceptsReturn="True" 
                                 TextWrapping="Wrap"
                                 Margin="0 5 0 0"
                                 Style="{StaticResource TextBoxExtend}" 
                                 FontSize="14"
                                 Width="290"
                                 HorizontalAlignment="Left"
                                 hc:InfoElement.Placeholder="个人签名">
                        </TextBox>
                        <Button Content="设置"
                                Command="{Binding SettingSignatureCommand}" FontSize="15"
                                Width="105" Margin="5 5 2 0" HorizontalAlignment="Right" Height="30" Cursor="Hand"></Button>
                    </StackPanel>
                    <Button Content="符文管理" Width="100" FontSize="15" Height="35"
                            Cursor="Hand"
                            Style="{StaticResource ButtonPrimary}"
                            Margin="0 20 0 0"
                            Command="{Binding ManageRuneCommand}"
                            HorizontalAlignment="Right"></Button>
                    
                    <Button Content="获取最新符文装备推荐" Width="290" FontSize="15" Height="35"
                            Cursor="Hand"
                            Style="{StaticResource ButtonWarning}"
                            Margin="0 5 0 0"
                            Command="{Binding FetchRunesAndItemsCommandAsync}"
                            HorizontalAlignment="Center"></Button>
                </StackPanel>
            </GroupBox>
            <GroupBox Margin="10 0" Header="消息设置" FontSize="18" 
                      Padding="5"
                      Width="300"
                      hc:BorderElement.CornerRadius="5"
                      Style="{StaticResource GroupBoxOriginal}" 
                      Foreground="{DynamicResource DefaultFontColor}"
                      Background="{DynamicResource DefaultCardBackgroundColor}">
                <StackPanel Orientation="Vertical">
                    <!--<CheckBox Content="关闭开局发送对方上等马信息" FontSize="18" IsChecked="{Binding CloseSendOtherWhenBegin,UpdateSourceTrigger=PropertyChanged}" Margin="0 10 0 0">
                        <behaviors:Interaction.Triggers>
                            <behaviors:EventTrigger EventName="Checked">
                                <behaviors:InvokeCommandAction Command="{Binding CheckedCloseSendOtherWhenBeginCommandAsync}"></behaviors:InvokeCommandAction>
                            </behaviors:EventTrigger>
                            <behaviors:EventTrigger EventName="Unchecked">
                                <behaviors:InvokeCommandAction Command="{Binding UnCheckedCloseSendOtherWhenBeginCommandAsync}"></behaviors:InvokeCommandAction>
                            </behaviors:EventTrigger>
                        </behaviors:Interaction.Triggers>
                    </CheckBox>-->

                    <TextBox Text="自定义上等马信息 :
                                   {name} = 召唤师名字
                                   {horse} = 马种信息
                                   {kda} = 最近五场战绩
                                   {solorank} = 单双排段位
                                   {solorankDetail} = 单双排胜负场
                                   {flexrank} = 灵活段位  
                                   {flexrankDetail} = 灵活组排胜负场
                                   {score} = 评分
                                   {winRate} = 胜率
                             
                                    如 : 
                             
                             
                             上等马浦东Faker,评分120,单双排黄金一,灵活组排白银二,最近五场战绩10/1/1 , 10/1/1 , 10/1/1 , 10/1/1 , 10/1/1 胜率60%
                                    
                             =
                             
                              
                             {horse}{name},评分{score},单双排{solorank},灵活组排{flexrank},最近五场战绩{kda} 胜率{winRate}
                             " 
                                        
                             FontSize="16"
                             AcceptsReturn="True" TextWrapping="Wrap" IsReadOnly="True" Margin="0 10 0 0">

                    </TextBox>
                    <TextBox Style="{StaticResource TextBoxExtend}" hc:InfoElement.Placeholder="自定义马匹消息(字数过多会发不出来)"
                             AcceptsReturn="True"
                             TextWrapping="Wrap"
                             FontSize="16"
                             Margin="0 5 0 5"
                             Text="{Binding HorseTemplate,UpdateSourceTrigger=PropertyChanged}"
                             VerticalContentAlignment="Top"
                             Height="150"
                             />

                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text=">120分：" Margin="10"></TextBlock>
                        <TextBox Style="{DynamicResource TextBoxExtendBaseStyle}" 
                                 hc:InfoElement.Placeholder="最多5个字"
                                 Width="184"
                                 Text="{Binding Above120ScoreTxt,UpdateSourceTrigger=PropertyChanged}" 
                                 Margin="5 5"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text=">110分：" Margin="10"></TextBlock>
                        <TextBox Style="{StaticResource TextBoxExtend}" 
                                 hc:InfoElement.Placeholder="最多5个字"
                                 Width="184"
                                 Text="{Binding Above110ScoreTxt,UpdateSourceTrigger=PropertyChanged}" 
                                 Margin="5 5"></TextBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text=">100分：" Margin="10"></TextBlock>
                        <TextBox Style="{StaticResource TextBoxExtend}" 
                                 hc:InfoElement.Placeholder="最多5个字"
                                 Width="184"
                                 Text="{Binding Above100ScoreTxt,UpdateSourceTrigger=PropertyChanged}" 
                                 Margin="5 5"></TextBox>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="&lt;100分：" Margin="10"></TextBlock>
                        <TextBox Style="{StaticResource TextBoxExtend}" 
                                 hc:InfoElement.Placeholder="最多5个字"
                                 Width="184"
                                 Text="{Binding Below100ScoreTxt,UpdateSourceTrigger=PropertyChanged}" 
                                 Margin="5 5"></TextBox>
                    </StackPanel>
                    <Button Content="保存" HorizontalAlignment="Right" 
                            Margin="0 5 0 0"
                            Cursor="Hand"
                            FontSize="15"
                            Height="35"
                            Width="120"
                            Command="{Binding SaveHorseTemplateCommandAsync}"></Button>

                    <StackPanel Orientation="Vertical" Grid.Column="0" Margin="5 10">
                        <TextBlock Text="一键讲道理：" Foreground="{DynamicResource DefaultFontColor}"/>
                        <TextBox Text="{Binding FuckWords,UpdateSourceTrigger=PropertyChanged}"
                                 AcceptsReturn="True" TextWrapping="Wrap"
                                 Margin="0 5 0 0"
                                 Style="{StaticResource TextBoxExtend}" 
                                 FontSize="14"
                                 hc:InfoElement.Placeholder="每句话用换行分开 一句话不要太长">
                        </TextBox>
                        <Button Content="保存" Width="120" Height="35" 
                                FontSize="15"
                                HorizontalAlignment="Right" Margin="5 5 0 0" Command="{Binding SaveFuckWordsCommandAsync}"></Button>
                    </StackPanel>
                    <StackPanel Orientation="Vertical" Grid.Column="0" Margin="5 10">
                        <TextBlock Text="一键吹捧：" Foreground="{DynamicResource DefaultFontColor}"/>
                        <TextBox Text="{Binding GoodWords,UpdateSourceTrigger=PropertyChanged}"
                                 AcceptsReturn="True" TextWrapping="Wrap"
                                 Margin="0 5 0 0"
                                 Style="{StaticResource TextBoxExtend}" 
                                 FontSize="14"
                                 hc:InfoElement.Placeholder="每句话用换行分开 一句话不要太长">
                        </TextBox>
                        <Button Content="保存" Width="120" Height="35" 
                                FontSize="15"
                                HorizontalAlignment="Right" Margin="5 5 0 0" Command="{Binding SaveGoodWordsCommandAsync}"></Button>
                    </StackPanel>
                </StackPanel>
            </GroupBox>
            <GroupBox Margin="10 0" Header="软件设置" FontSize="18" Padding="5"
                      Style="{StaticResource GroupBoxOriginal}" 
                      Width="350"
                      Foreground="{DynamicResource DefaultFontColor}"
                      Background="{DynamicResource DefaultCardBackgroundColor}">
                <StackPanel Orientation="Vertical">
                    <Button Style="{StaticResource ButtonWarning}" HorizontalAlignment="Right" 
                            Margin="5"
                            FontSize="15"
                            Height="35"
                            Cursor="Hand"
                            Content="打赏一下作者(留下姓名)" Command="{Binding PayCommand}"/>
                    <!--<CheckBox Content="开机自启" FontSize="18" Foreground="{DynamicResource DefaultFontColor}" 
                              Margin="5"
                              IsChecked="{Binding AutoStartWhenComputerRun,UpdateSourceTrigger=PropertyChanged}">
                        <behaviors:Interaction.Triggers>
                            <behaviors:EventTrigger EventName="Checked">
                                <behaviors:InvokeCommandAction Command="{Binding CheckedAutoStartWhenComputerRunCommandAsync}"></behaviors:InvokeCommandAction>
                            </behaviors:EventTrigger>
                            <behaviors:EventTrigger EventName="Unchecked">
                                <behaviors:InvokeCommandAction Command="{Binding UncheckedAutoStartWhenComputerRunCommandAsync}"></behaviors:InvokeCommandAction>
                            </behaviors:EventTrigger>
                        </behaviors:Interaction.Triggers>
                    </CheckBox>-->
                    <StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                        <TextBlock Text="对局中查看详情: " VerticalAlignment="Center"></TextBlock>
                        <!--<RadioButton Content="Alt+Q" Foreground="{DynamicResource DefaultFontColor}" GroupName="detail" IsChecked="{Binding IsAltQOpenVsDetail}" Margin="10 0 0 0" FontSize="15">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="Checked">
                                    <behaviors:InvokeCommandAction Command="{Binding CheckUseAltQOpenVsDetailCommandAsync}"></behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </RadioButton>
                        <RadioButton Content="Ctrl+Q" Foreground="{DynamicResource DefaultFontColor}" GroupName="detail" IsChecked="{Binding IsAltQOpenVsDetail,Converter={StaticResource Boolean2BooleanReConverter}}" Margin="10 0 0 0" FontSize="15">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="Checked">
                                    <behaviors:InvokeCommandAction Command="{Binding UnCheckUseAltQOpenVsDetailCommandAsync}"></behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </RadioButton>-->
                        <TextBox Text="{Binding TeamDetailKeys}" IsReadOnly="True" Width="145"/>

                        <Button Command="{Binding SaveTeamDetailKeyCommand}" Margin="5 0 0 0" FontSize="15" Height="35">设置</Button>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                        <TextBlock Text="游戏内发送我方牛马："></TextBlock>
                        <TextBlock Text="F7"></TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                        <TextBlock Text="游戏内发送敌方牛马："></TextBlock>
                        <TextBlock Text="F8"></TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                        <TextBlock Text="游戏内发送开黑信息："></TextBlock>
                        <TextBlock Text="F11" FontSize="18"></TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                        <TextBlock Text="游戏内一键讲理："></TextBlock>
                        <TextBlock Text="~+F7" FontSize="18"></TextBlock>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                        <TextBlock Text="游戏内一键吹捧："></TextBlock>
                        <TextBlock Text="~+F8" FontSize="18"></TextBlock>
                    </StackPanel>
                    <hc:TextBox IsReadOnly="True" 
                                FontSize="16"
                                Foreground="{DynamicResource DefaultFontColor}"
                                ToolTip="{Binding GameStartupLocation,UpdateSourceTrigger=PropertyChanged}"
                                Text="{Binding GameStartupLocation,UpdateSourceTrigger=PropertyChanged}"
                                hc:TitleElement.Title="游戏目录" hc:TitleElement.TitlePlacement="Left" Margin="0 5 0 0"></hc:TextBox>
                    <Button Content="自动获取游戏启动程序" HorizontalAlignment="Right" 
                            Margin="0 5 1 0"
                            Cursor="Hand"
                            FontSize="15"
                            Height="35"
                            Command="{Binding GetGameFolderCommandAsync}"></Button>
                    <Button Content="手动获取游戏启动程序" HorizontalAlignment="Right" 
                            Margin="0 5 1 0"
                            Cursor="Hand"
                            FontSize="15"
                            Height="35"
                            Command="{Binding ManualGetGameFolderCommandAsync}"></Button>

                    <Button Content="启动游戏" 
                            Cursor="Hand"
                            Style="{StaticResource ButtonPrimary}"
                            Command="{Binding StartGameCommand}"
                            Margin="20 5 1 0" FontSize="15" Height="35" 
                            HorizontalAlignment="Right"></Button>

                    <CheckBox Content="自动启动游戏" 
                              Foreground="{DynamicResource DefaultFontColor}" 
                              HorizontalAlignment="Right"
                              Margin="0 10 2 0" FontSize="16" 
                              IsChecked="{Binding AutoStartGame,UpdateSourceTrigger=PropertyChanged}">
                        <behaviors:Interaction.Triggers>
                            <behaviors:EventTrigger EventName="Checked">
                                <behaviors:InvokeCommandAction Command="{Binding CheckedAutoStartGameCommandAsync}"></behaviors:InvokeCommandAction>
                            </behaviors:EventTrigger>
                            <behaviors:EventTrigger EventName="Unchecked">
                                <behaviors:InvokeCommandAction Command="{Binding UncheckedAutoStartGameCommandAsync}"></behaviors:InvokeCommandAction>
                            </behaviors:EventTrigger>
                        </behaviors:Interaction.Triggers>
                    </CheckBox>

                    <StackPanel Orientation="Horizontal" Margin="0 20 0 10">
                        <RadioButton Content="明亮模式" Foreground="{DynamicResource DefaultFontColor}" FontSize="16" Margin="20 0 0 0" IsChecked="{Binding IsDarkTheme,Converter={StaticResource Boolean2BooleanReConverter}}" GroupName="theme">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="Checked">
                                    <behaviors:InvokeCommandAction Command="{Binding ChooseLightThemeCommandAsync}"></behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </RadioButton>
                        <RadioButton Content="暗黑模式" Foreground="{DynamicResource DefaultFontColor}" FontSize="16" Margin="80 0 0 0" IsChecked="{Binding IsDarkTheme}" GroupName="theme">
                            <behaviors:Interaction.Triggers>
                                <behaviors:EventTrigger EventName="Checked">
                                    <behaviors:InvokeCommandAction Command="{Binding ChooseDarkThemeCommandAsync}"></behaviors:InvokeCommandAction>
                                </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                        </RadioButton>
                    </StackPanel>
                    <Button Content="免费开源软件.点个赞" 
                            Cursor="Hand"
                            Click="Button_Click"
                            Style="{StaticResource ButtonPrimary}"
                            Margin="10 20 10 0" Width="260" FontSize="15" Height="35" 
                            HorizontalAlignment="Center"></Button>

                    <Button Content="手动更新" 
                            Cursor="Hand"
                            Style="{StaticResource ButtonSuccess}"
                             Margin="10 20 10 0" Width="260" FontSize="15" Height="35" 
                            HorizontalAlignment="Center" Command="{Binding ManualUpdateCommandAsync}"></Button>

                    <Button Content="退出游戏" 
                             Margin="10 20 10 0" Width="260"
                            Cursor="Hand"
                            Command="{Binding ExitGameCommandAsync}"
                            Style="{StaticResource ButtonDanger}"
                            Height="40"
                            VerticalAlignment="Bottom" FontSize="18">
                    </Button>

                    <TextBlock HorizontalAlignment="Right" 
                               Foreground="{DynamicResource DefaultFontColor}" 
                               FontSize="15" Margin="0 10 20 10" Text="{Binding Version,StringFormat={}版本号 ：v{0}}"/>
                </StackPanel>
            </GroupBox>
        </StackPanel>
    </ScrollViewer>
</Page>
