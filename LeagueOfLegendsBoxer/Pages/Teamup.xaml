<Page x:Class="LeagueOfLegendsBoxer.Pages.Teamup"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:LeagueOfLegendsBoxer.Pages"
      mc:Ignorable="d" 
      xmlns:hc="https://handyorg.github.io/handycontrol"
      xmlns:model="clr-namespace:LeagueOfLegendsBoxer.Models"
      xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
      xmlns:resources ="clr-namespace:LeagueOfLegendsBoxer.Resources"
      xmlns:converts ="clr-namespace:LeagueOfLegendsBoxer.Converts"
      FontFamily="微软雅黑" Name="container"
      d:DesignHeight="450" d:DesignWidth="800"
      Title="Teamup">
    <Page.Resources>
        <converts:ValueHalfConverter x:Key="ValueHalfConverter"></converts:ValueHalfConverter>
        <resources:MessageDataTemplateSelector x:Key="messageselector"></resources:MessageDataTemplateSelector>
        <DataTemplate x:Key="chatSender">
            <Grid Name="ctx">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                    <TextBox Text="{Binding Message,UpdateSourceTrigger=PropertyChanged}"
                             Background="{DynamicResource DefaultHoverColor}"
                             TextWrapping="Wrap"
                             AcceptsReturn="True"
                             VerticalAlignment="Top"
                             VerticalContentAlignment="Top"
                             MaxWidth="{Binding ElementName=ctx,Path=ActualWidth,Converter={StaticResource ValueHalfConverter},UpdateSourceTrigger=PropertyChanged}"
                             BorderThickness="0"
                             Foreground="{DynamicResource DefaultFontColor}"
                             HorizontalAlignment="Right"
                             FontSize="15">
                    </TextBox>
                    <StackPanel Orientation="Vertical" Grid.Row="0" HorizontalAlignment="Right">
                        <TextBlock VerticalAlignment="Center" Margin="10 0 0 0" 
                               Cursor="Hand"
                               Background="Transparent"
                               FontSize="14"
                               Text="{Binding UserName}" Name="name" HorizontalAlignment="Right">
                            <TextBlock.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockBaseStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsAdministrator}" Value="True">
                                            <Setter Property="Foreground" Value="Salmon"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsAdministrator}" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource DefaultFontColor}"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Resources>
                        <Popup Focusable="False"
                               IsOpen="{Binding ElementName=name,Path=IsMouseOver,Mode=OneWay}"
                               PlacementTarget="{Binding ElementName=name}" 
                               Placement="Right" AllowsTransparency="True"
                               Effect="{StaticResource EffectShadow2}">
                               <StackPanel Orientation="Vertical" Background="{DynamicResource DefaultHoverColor}">
                                    <TextBlock Text="{Binding UserName}" Margin="10 5"/>
                                    <TextBlock Text="{Binding ServerArea}" Margin="10 5"/>
                                    <TextBlock Text="{Binding Rank_SOLO_5x5,StringFormat={}单双 : {0}}" Margin="10 5"/>
                                    <TextBlock Text="{Binding Rank_FLEX_SR,StringFormat={}灵活 : {0}}" Margin="10 5"/>
                                    <TextBlock Text="{Binding Desc,StringFormat={}标签 : {0}}" Margin="10 5" Visibility="{Binding Desc,Converter={StaticResource String2VisibilityConverter}}"/>
                               </StackPanel>
                        </Popup>
                    </TextBlock>
                        <TextBlock Text="{Binding CreateTimeText}" HorizontalAlignment="Right" Margin="0 -2 0 0" Grid.Row="1" Foreground="#aaaaaa"></TextBlock>
                    </StackPanel>
                </StackPanel>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="loadData">
            <TextBlock Text="加载历史聊天记录" HorizontalAlignment="Center" FontSize="13" Foreground="{DynamicResource LoadColor}" Cursor="Hand" TextDecorations="Underline">
                <behaviors:Interaction.Triggers>
                        <behaviors:EventTrigger EventName="MouseLeftButtonDown">
                                    <behaviors:InvokeCommandAction Command="{Binding DataContext.LoadHistoryMessageCommmand,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=ListBox}}"
                                                                   ></behaviors:InvokeCommandAction>
                        </behaviors:EventTrigger>
                </behaviors:Interaction.Triggers>
            </TextBlock>
        </DataTemplate>
        <DataTemplate x:Key="chatReceiver">
            <Grid Name="ctx1">
                <StackPanel Orientation="Horizontal">
                    <StackPanel Orientation="Vertical" Grid.Row="0" HorizontalAlignment="Left">
                        <TextBlock VerticalAlignment="Center" Margin="0 0 10 0" 
                               Cursor="Hand" FontSize="14"
                               Text="{Binding UserName}" Name="name" HorizontalAlignment="Left">
                            <behaviors:Interaction.Triggers>
                                    <behaviors:EventTrigger EventName="MouseLeftButtonDown">
                                        <behaviors:InvokeCommandAction Command="{Binding OpenRecordByIdCommandAsync}"></behaviors:InvokeCommandAction>
                                    </behaviors:EventTrigger>
                            </behaviors:Interaction.Triggers>
                            <TextBlock.Resources>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource TextBlockBaseStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsAdministrator}" Value="True">
                                            <Setter Property="Foreground" Value="Salmon"></Setter>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsAdministrator}" Value="False">
                                            <Setter Property="Foreground" Value="{DynamicResource DefaultFontColor}"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Resources>
                             <Popup Focusable="False"
                                    IsOpen="{Binding ElementName=name,Path=IsMouseOver,Mode=OneWay}"
                                    PlacementTarget="{Binding ElementName=name}" 
                                    Placement="Right" AllowsTransparency="True"
                                    Effect="{StaticResource EffectShadow2}">
                                   <StackPanel Orientation="Vertical" Background="{DynamicResource DefaultHoverColor}">
                                        <TextBlock Text="{Binding UserName}" Margin="10 5"/>
                                        <TextBlock Text="{Binding ServerArea}" Margin="10 5"/>
                                        <TextBlock Text="{Binding Rank_SOLO_5x5,StringFormat={}单双 : {0}}" Margin="10 5"/>
                                        <TextBlock Text="{Binding Rank_FLEX_SR,StringFormat={}灵活 : {0}}" Margin="10 5"/>
                                        <TextBlock Text="{Binding Desc,StringFormat={}标签 : {0}}" Margin="10 5" Visibility="{Binding Desc,Converter={StaticResource String2VisibilityConverter}}"/>
                                        <Button Content="复制昵称" 
                                                Command="{Binding CopyCurrentUserNameCommand}"
                                                Margin="10 5"
                                                Width="120"
                                                Cursor="Hand"
                                                Height="30" FontSize="12"
                                                Style="{StaticResource ButtonDashedPrimary}"></Button>
                                        <Button Content="禁言" 
                                                Command="{Binding DenySendMessageCommandAsync}"
                                                Margin="10 5" Width="120"
                                                Cursor="Hand"
                                                Height="30" FontSize="12" Style="{StaticResource ButtonDanger}"
                                                Visibility="{Binding CurrentIsAdministrator,Converter={StaticResource Boolean2VisibilityConverter}}"></Button>
                                   </StackPanel>
                            </Popup>
                        </TextBlock>
                        <TextBlock Text="{Binding CreateTimeText}" HorizontalAlignment="Left" Grid.Row="2" Foreground="#aaaaaa"></TextBlock>
                        <TextBlock Text="{Binding ServerArea}" Visibility="{Binding ServerArea,Converter={StaticResource String2VisibilityConverter}}" 
                           Grid.Row="1" HorizontalAlignment="Left" FontSize="11" Foreground="#aaaaaa"></TextBlock>
                    </StackPanel>
                    <TextBox Text="{Binding Message,UpdateSourceTrigger=PropertyChanged}"
                             Background="{DynamicResource DefaultHoverColor}"
                             TextWrapping="Wrap"
                             AcceptsReturn="True"
                             VerticalAlignment="Top"
                             VerticalContentAlignment="Top"
                             MaxWidth="{Binding ElementName=ctx1,Path=ActualWidth,Converter={StaticResource ValueHalfConverter},UpdateSourceTrigger=PropertyChanged}"
                             BorderThickness="0"
                             Foreground="{DynamicResource DefaultFontColor}"
                             HorizontalAlignment="Left"
                             FontSize="15">
                    </TextBox>
                </StackPanel>
            </Grid>
        </DataTemplate>
    </Page.Resources>
    <behaviors:Interaction.Triggers>
        <behaviors:EventTrigger EventName="Loaded">
            <behaviors:InvokeCommandAction Command="{Binding LoadedCommandAsync}"></behaviors:InvokeCommandAction>
        </behaviors:EventTrigger>
    </behaviors:Interaction.Triggers>
    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="35"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="50"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"></ColumnDefinition>
                <ColumnDefinition Width="180"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <hc:Card BorderThickness="0" Margin="0 5 5 2"
                     Grid.Row="0"
                     Grid.ColumnSpan="2"
                     Effect="{StaticResource EffectShadow2}"
                     Background="{DynamicResource DefaultCardBackgroundColor}" 
                     Foreground="{DynamicResource DefaultFontColor}">
                <TextBlock Text="{Binding OnlineCount,StringFormat={}当前在线人数: {0}}" FontSize="15" VerticalAlignment="Center" Margin="5 0 0 0">
                    
                </TextBlock>
            </hc:Card>
            <hc:Card BorderThickness="0" Margin="0 5 5 2"
                     Grid.Row="1"
                     Grid.ColumnSpan="2"
                     Effect="{StaticResource EffectShadow2}"
                     Background="{DynamicResource DefaultCardBackgroundColor}" 
                     Foreground="{DynamicResource DefaultFontColor}">
                <ScrollViewer resources:ScrollViewerHelper.AlwaysScrollToEnd="True" 
                              Name="chatScrollViewer"
                              RequestBringIntoView="ScrollViewer_RequestBringIntoView"
                              >
                    <ListBox ItemsSource="{Binding ChatMessages,UpdateSourceTrigger=PropertyChanged}"
                             UseLayoutRounding="True"
                             ScrollViewer.CanContentScroll="False"
                             ScrollViewer.IsDeferredScrollingEnabled="True"
                             PreviewMouseWheel="ListView_PreviewMouseWheel"
                             ItemTemplateSelector="{StaticResource messageselector}"
                             TextOptions.TextFormattingMode="Display"
                             BorderThickness="0" Background="{DynamicResource DefaultCardBackgroundColor}" Foreground="{DynamicResource DefaultFontColor}">
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel Orientation="Vertical"></StackPanel>
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>

                        <ListBox.ItemContainerStyle>
                            <Style TargetType="ListBoxItem" BasedOn="{StaticResource ClockListBoxItemStyle}">
                                <Setter Property="Margin" Value="0 5"></Setter>
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="Transparent"></Setter>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Background" Value="Transparent"></Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListBox.ItemContainerStyle>
                    </ListBox>
                </ScrollViewer>
            </hc:Card>

            <TextBox Text="{Binding ChatMessage,UpdateSourceTrigger=PropertyChanged}" 
                     Style="{StaticResource TextBoxExtend}"
                     hc:InfoElement.Placeholder="输入发送消息，最多50字"
                     Height="35" Grid.Row="2" Grid.Column="0"></TextBox>
            <StackPanel Orientation="Horizontal" Grid.Row="2" Grid.Column="1">
                <Button Content="开黑喊话" 
                        ToolTip="设置中配置模板"
                        Command="{Binding GroupMessageCommand}" Style="{StaticResource ButtonWarning}" Margin="5 0 0 0"></Button>
                <Button Content="发送" Command="{Binding SendMessageCommandAsync}" Style="{StaticResource ButtonPrimary}" IsDefault="True" Width="65" Margin="5 0 0 0"></Button>
                <Label Height="30" Width="35" Background="Transparent" BorderThickness="0" ToolTip="小窗口中打开" Cursor="Hand" MouseLeftButtonDown="Label_MouseLeftButtonDown">
                    <Path Data="{StaticResource mwindow}" Fill="{DynamicResource DefaultFontColor}" Stretch="Fill">
                        
                    </Path>    
                </Label>
            </StackPanel>

        </Grid>
    </Grid>
</Page>
